generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum RequestStatus {
  Pending
  Approved
  Rejected
  Completed
}

enum TransactionType {
  Request
  Received
  Consumed
  Borrowed
  Returned
  Disposed
  Repair
}

enum RequestType {
  Borrow
  Consume
}

enum ItemStatus {
  LowStock
  Available
  OutOfStock
  Disposed
}

enum ItemCategory {
  Bus
  Tool
  Consumable
}

enum BusStatus {
  Active
  UnderMaintenance
  Decommissioned
}

enum BusType {
  Airconditioned
  Ordinary
}

model Bus {
  bus_id               Int     @id @default(autoincrement())
  plate_number         String  @unique
  body_builder         String
  manufacturer         String
  fuel_type            String
  status               BusStatus
  bus_type             BusType
  model                String
  seat_capacity        Int
  purchased_date       DateTime
  last_inspection_date DateTime
  purchased_price      Float
  current_condition    String

  items                Item[]
}

model Receipt {
  receipt_id     Int     @id @default(autoincrement())
  receipt_title  String
  date_generate  DateTime

  items          Item[]
}

model Item {
  item_id            Int     @id @default(autoincrement())
  item_name          String
  item_number        String  @unique
  category           ItemCategory
  description        String
  unit_measure       String
  unit_cost          Float
  reorder_level      Int
  current_stock      Int
  usable_quantity    Int
  defective_quantity Int
  missing_quantity   Int
  status             ItemStatus
  date_update        DateTime

  bus_id             Int
  receipt_id         Int

  bus                Bus      @relation(fields: [bus_id], references: [bus_id])
  receipt            Receipt  @relation(fields: [receipt_id], references: [receipt_id])
  transactions       InventoryTransaction[]
  purchaseRequests   PurchaseRequestItem[]
  employeeRequests   EmployeeRequestItemMap[]
}

model PurchaseRequest {
  purchase_request_id Int     @id @default(autoincrement())
  request_item        String
  unit_measure        String
  quantity            Int
  request_date        DateTime
  status              RequestStatus
  approval_date       DateTime?
  rejection_reason    String?

  transactions        InventoryTransaction[]
  items               PurchaseRequestItem[]
}

model PurchaseRequestItem {
  id                  Int     @id @default(autoincrement())
  purchase_request_id Int
  item_id             Int

  purchaseRequest     PurchaseRequest @relation(fields: [purchase_request_id], references: [purchase_request_id])
  item                Item            @relation(fields: [item_id], references: [item_id])

  @@unique([purchase_request_id, item_id])
}

model InventoryTransaction {
  transaction_id   Int            @id @default(autoincrement())
  transaction_date DateTime
  transaction_type TransactionType

  reference_id     Int
  purchase_request_id Int?

  item_id          Int
  request_id       Int?

  item             Item             @relation(fields: [item_id], references: [item_id])
  purchaseRequest  PurchaseRequest? @relation(fields: [purchase_request_id], references: [purchase_request_id])
  employeeRequest  EmployeeRequestItem? @relation(fields: [request_id], references: [request_id])
}

model EmployeeRequestItem {
  request_id           Int     @id @default(autoincrement())
  employee_name        String
  request_purpose      String
  request_type         RequestType
  quantity             Int
  request_date         DateTime
  expected_return_date DateTime?
  actual_return_date   DateTime?
  status               String

  transactions         InventoryTransaction[]
  items                EmployeeRequestItemMap[]
}

model EmployeeRequestItemMap {
  id                  Int     @id @default(autoincrement())
  request_id          Int
  item_id             Int

  employeeRequest     EmployeeRequestItem @relation(fields: [request_id], references: [request_id])
  item                Item                @relation(fields: [item_id], references: [item_id])

  @@unique([request_id, item_id])
}
